{
  "contractName": "LotteryMultiSigWallet",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback",
      "payable": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive",
      "payable": true
    },
    {
      "inputs": [],
      "name": "balanceInPot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"balanceInPot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/LotteryMultiSigWallet.sol\":\"LotteryMultiSigWallet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/LotteryMultiSigWallet.sol\":{\"keccak256\":\"0xc9bb4f119a7e2ef731fc4102c18626f2b0b59559473f10e3dc857c4825b7ae1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://715addea2f1a272b75c25e92030d431b2769c1f9e6df8cc8cb2789eb47286587\",\"dweb:/ipfs/QmYmhpG2eXdLvMvBE8Gan8dg3oRFba3Wd8ekhxqBBTEx7C\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6103908061007e6000396000f3fe6080604052600436106100585760003560e01c8063715018a611610040578063715018a6146100965780638da5cb5b146100ab578063f2fde38b146100d357005b806314e59987146100615780633ccfd60b1461008157005b3661005f57005b005b34801561006d57600080fd5b506040514781526020015b60405180910390f35b34801561008d57600080fd5b5061005f6100f3565b3480156100a257600080fd5b5061005f610181565b3480156100b757600080fd5b506000546040516001600160a01b039091168152602001610078565b3480156100df57600080fd5b5061005f6100ee36600461032a565b6101e7565b6000546001600160a01b031633146101525760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b60405133904780156108fc02916000818181858888f1935050505015801561017e573d6000803e3d6000fd5b50565b6000546001600160a01b031633146101db5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610149565b6101e560006102c2565b565b6000546001600160a01b031633146102415760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610149565b6001600160a01b0381166102bd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610149565b61017e815b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561033c57600080fd5b81356001600160a01b038116811461035357600080fd5b939250505056fea26469706673582212205697f7da73c39b38bc3212c49463bf7a74b71c7fb85b26ccd6c909041c60b03464736f6c63430008090033",
  "deployedBytecode": "0x6080604052600436106100585760003560e01c8063715018a611610040578063715018a6146100965780638da5cb5b146100ab578063f2fde38b146100d357005b806314e59987146100615780633ccfd60b1461008157005b3661005f57005b005b34801561006d57600080fd5b506040514781526020015b60405180910390f35b34801561008d57600080fd5b5061005f6100f3565b3480156100a257600080fd5b5061005f610181565b3480156100b757600080fd5b506000546040516001600160a01b039091168152602001610078565b3480156100df57600080fd5b5061005f6100ee36600461032a565b6101e7565b6000546001600160a01b031633146101525760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b60405133904780156108fc02916000818181858888f1935050505015801561017e573d6000803e3d6000fd5b50565b6000546001600160a01b031633146101db5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610149565b6101e560006102c2565b565b6000546001600160a01b031633146102415760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610149565b6001600160a01b0381166102bd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610149565b61017e815b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561033c57600080fd5b81356001600160a01b038116811461035357600080fd5b939250505056fea26469706673582212205697f7da73c39b38bc3212c49463bf7a74b71c7fb85b26ccd6c909041c60b03464736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1506:17",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:17",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:76:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:17"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "178:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:25:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:25:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:17",
                "type": ""
              }
            ],
            "src": "14:177:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "297:125:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "307:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "319:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "330:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "315:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "315:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "307:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "349:9:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "364:6:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "372:42:17",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "360:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "360:55:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "342:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "342:74:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "342:74:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "266:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "277:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "288:4:17",
                "type": ""
              }
            ],
            "src": "196:226:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "497:239:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "543:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "552:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "555:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "545:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "545:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "545:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "518:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "527:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "514:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "514:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "539:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "510:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "510:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "507:52:17"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "568:36:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "594:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "581:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "581:23:17"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "572:5:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "690:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "699:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "702:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "692:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "692:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "692:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "626:5:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "637:5:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "644:42:17",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "633:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "633:54:17"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "623:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "623:65:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "616:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:73:17"
                  },
                  "nodeType": "YulIf",
                  "src": "613:93:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "715:15:17",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "725:5:17"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "715:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "463:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "474:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "486:6:17",
                "type": ""
              }
            ],
            "src": "427:309:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "915:182:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "932:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "943:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "925:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "925:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "925:21:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "966:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "977:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "962:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "962:18:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "982:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "955:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "955:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "955:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1005:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1016:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1001:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1001:18:17"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1021:34:17",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "994:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "994:62:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "994:62:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1065:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1077:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1088:2:17",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1073:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1073:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1065:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "892:9:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "906:4:17",
                "type": ""
              }
            ],
            "src": "741:356:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1276:228:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1293:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1304:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1286:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1286:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1286:21:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1327:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1338:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1323:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1323:18:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1343:2:17",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1316:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1316:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1316:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1366:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1377:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1362:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1362:18:17"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1382:34:17",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1355:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1355:62:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1355:62:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1437:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1448:2:17",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1433:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1433:18:17"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1453:8:17",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1426:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1426:36:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1426:36:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1471:27:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1483:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1494:3:17",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1479:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1479:19:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1471:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1253:9:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1267:4:17",
                "type": ""
              }
            ],
            "src": "1102:402:17"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 17,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "111:316:10:-:0;;;;;;;;;;;;-1:-1:-1;921:32:3;719:10:4;921:18:3;:32::i;:::-;111:316:10;;2270:187:3;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:3;;;-1:-1:-1;;;;;;2378:17:3;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;111:316:10:-;;;;;;;",
  "deployedSourceMap": "111:316:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;230:88;;;;;;;;;;-1:-1:-1;230:88:10;;292:21;160:25:17;;148:2;133:18;230:88:10;;;;;;;;322:101;;;;;;;;;;;;;:::i;1668::3:-;;;;;;;;;;;;;:::i;1036:85::-;;;;;;;;;;-1:-1:-1;1082:7:3;1108:6;1036:85;;-1:-1:-1;;;;;1108:6:3;;;342:74:17;;330:2;315:18;1036:85:3;196:226:17;1918:198:3;;;;;;;;;;-1:-1:-1;1918:198:3;;;;;:::i;:::-;;:::i;322:101:10:-;1082:7:3;1108:6;-1:-1:-1;;;;;1108:6:3;719:10:4;1248:23:3;1240:68;;;;-1:-1:-1;;;1240:68:3;;943:2:17;1240:68:3;;;925:21:17;;;962:18;;;955:30;1021:34;1001:18;;;994:62;1073:18;;1240:68:3;;;;;;;;;367:51:10::1;::::0;375:10:::1;::::0;396:21:::1;367:51:::0;::::1;;;::::0;::::1;::::0;;;396:21;375:10;367:51;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;322:101::o:0;1668::3:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:3;719:10:4;1248:23:3;1240:68;;;;-1:-1:-1;;;1240:68:3;;943:2:17;1240:68:3;;;925:21:17;;;962:18;;;955:30;1021:34;1001:18;;;994:62;1073:18;;1240:68:3;741:356:17;1240:68:3;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1918:198::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:3;719:10:4;1248:23:3;1240:68;;;;-1:-1:-1;;;1240:68:3;;943:2:17;1240:68:3;;;925:21:17;;;962:18;;;955:30;1021:34;1001:18;;;994:62;1073:18;;1240:68:3;741:356:17;1240:68:3;-1:-1:-1;;;;;2006:22:3;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:3;;1304:2:17;1998:73:3::1;::::0;::::1;1286:21:17::0;1343:2;1323:18;;;1316:30;1382:34;1362:18;;;1355:62;1453:8;1433:18;;;1426:36;1479:19;;1998:73:3::1;1102:402:17::0;1998:73:3::1;2081:28;2100:8;2270:187:::0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:3;;;;;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;427:309:17:-;486:6;539:2;527:9;518:7;514:23;510:32;507:52;;;555:1;552;545:12;507:52;594:9;581:23;-1:-1:-1;;;;;637:5:17;633:54;626:5;623:65;613:93;;702:1;699;692:12;613:93;725:5;427:309;-1:-1:-1;;;427:309:17:o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract LotteryMultiSigWallet is Ownable {\n\n  fallback() external payable {\n  }\n  receive() external payable {\n  }\n\n  function balanceInPot() public view returns(uint){\n    return address(this).balance;\n  }\n\n  function withdraw() external onlyOwner {\n    payable(msg.sender).transfer(address(this).balance);\n  }\n\n\n}",
  "sourcePath": "/home/batis/SrcCode/myPRJ/SmartContBlockChain/BSCLottery/contracts/LotteryMultiSigWallet.sol",
  "ast": {
    "absolutePath": "project:/contracts/LotteryMultiSigWallet.sol",
    "exportedSymbols": {
      "Context": [
        368
      ],
      "LotteryMultiSigWallet": [
        2745
      ],
      "Ownable": [
        346
      ]
    },
    "id": 2746,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2702,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:10"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2703,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2746,
        "sourceUnit": 347,
        "src": "57:52:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2704,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 346,
              "src": "145:7:10"
            },
            "id": 2705,
            "nodeType": "InheritanceSpecifier",
            "src": "145:7:10"
          }
        ],
        "canonicalName": "LotteryMultiSigWallet",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2745,
        "linearizedBaseContracts": [
          2745,
          346,
          368
        ],
        "name": "LotteryMultiSigWallet",
        "nameLocation": "120:21:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2708,
              "nodeType": "Block",
              "src": "186:5:10",
              "statements": []
            },
            "id": 2709,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2706,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "166:2:10"
            },
            "returnParameters": {
              "id": 2707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "186:0:10"
            },
            "scope": 2745,
            "src": "158:33:10",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2712,
              "nodeType": "Block",
              "src": "221:5:10",
              "statements": []
            },
            "id": 2713,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2710,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "201:2:10"
            },
            "returnParameters": {
              "id": 2711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "221:0:10"
            },
            "scope": 2745,
            "src": "194:32:10",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2724,
              "nodeType": "Block",
              "src": "279:39:10",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 2720,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "300:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LotteryMultiSigWallet_$2745",
                            "typeString": "contract LotteryMultiSigWallet"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_LotteryMultiSigWallet_$2745",
                            "typeString": "contract LotteryMultiSigWallet"
                          }
                        ],
                        "id": 2719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "292:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2718,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "292:7:10",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2721,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "292:13:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "292:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2717,
                  "id": 2723,
                  "nodeType": "Return",
                  "src": "285:28:10"
                }
              ]
            },
            "functionSelector": "14e59987",
            "id": 2725,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceInPot",
            "nameLocation": "239:12:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "251:2:10"
            },
            "returnParameters": {
              "id": 2717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2716,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2725,
                  "src": "274:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2715,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "274:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "273:6:10"
            },
            "scope": 2745,
            "src": "230:88:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2743,
              "nodeType": "Block",
              "src": "361:62:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2738,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "404:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LotteryMultiSigWallet_$2745",
                                "typeString": "contract LotteryMultiSigWallet"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LotteryMultiSigWallet_$2745",
                                "typeString": "contract LotteryMultiSigWallet"
                              }
                            ],
                            "id": 2737,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "396:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2736,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "396:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "396:13:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "396:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2732,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "375:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "375:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "367:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 2730,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "367:8:10",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "367:19:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 2735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "367:28:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "367:51:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2742,
                  "nodeType": "ExpressionStatement",
                  "src": "367:51:10"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "id": 2744,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2728,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2727,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 288,
                  "src": "351:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "351:9:10"
              }
            ],
            "name": "withdraw",
            "nameLocation": "331:8:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "339:2:10"
            },
            "returnParameters": {
              "id": 2729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "361:0:10"
            },
            "scope": 2745,
            "src": "322:101:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2746,
        "src": "111:316:10",
        "usedErrors": []
      }
    ],
    "src": "32:395:10"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/LotteryMultiSigWallet.sol",
    "exportedSymbols": {
      "Context": [
        368
      ],
      "LotteryMultiSigWallet": [
        2745
      ],
      "Ownable": [
        346
      ]
    },
    "id": 2746,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2702,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:10"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2703,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2746,
        "sourceUnit": 347,
        "src": "57:52:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2704,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 346,
              "src": "145:7:10"
            },
            "id": 2705,
            "nodeType": "InheritanceSpecifier",
            "src": "145:7:10"
          }
        ],
        "canonicalName": "LotteryMultiSigWallet",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2745,
        "linearizedBaseContracts": [
          2745,
          346,
          368
        ],
        "name": "LotteryMultiSigWallet",
        "nameLocation": "120:21:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2708,
              "nodeType": "Block",
              "src": "186:5:10",
              "statements": []
            },
            "id": 2709,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2706,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "166:2:10"
            },
            "returnParameters": {
              "id": 2707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "186:0:10"
            },
            "scope": 2745,
            "src": "158:33:10",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2712,
              "nodeType": "Block",
              "src": "221:5:10",
              "statements": []
            },
            "id": 2713,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2710,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "201:2:10"
            },
            "returnParameters": {
              "id": 2711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "221:0:10"
            },
            "scope": 2745,
            "src": "194:32:10",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2724,
              "nodeType": "Block",
              "src": "279:39:10",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 2720,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "300:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LotteryMultiSigWallet_$2745",
                            "typeString": "contract LotteryMultiSigWallet"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_LotteryMultiSigWallet_$2745",
                            "typeString": "contract LotteryMultiSigWallet"
                          }
                        ],
                        "id": 2719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "292:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2718,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "292:7:10",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2721,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "292:13:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "292:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2717,
                  "id": 2723,
                  "nodeType": "Return",
                  "src": "285:28:10"
                }
              ]
            },
            "functionSelector": "14e59987",
            "id": 2725,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceInPot",
            "nameLocation": "239:12:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "251:2:10"
            },
            "returnParameters": {
              "id": 2717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2716,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2725,
                  "src": "274:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2715,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "274:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "273:6:10"
            },
            "scope": 2745,
            "src": "230:88:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2743,
              "nodeType": "Block",
              "src": "361:62:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2738,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "404:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LotteryMultiSigWallet_$2745",
                                "typeString": "contract LotteryMultiSigWallet"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LotteryMultiSigWallet_$2745",
                                "typeString": "contract LotteryMultiSigWallet"
                              }
                            ],
                            "id": 2737,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "396:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2736,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "396:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "396:13:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "396:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2732,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "375:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "375:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "367:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 2730,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "367:8:10",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "367:19:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 2735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "367:28:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "367:51:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2742,
                  "nodeType": "ExpressionStatement",
                  "src": "367:51:10"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "id": 2744,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2728,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2727,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 288,
                  "src": "351:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "351:9:10"
              }
            ],
            "name": "withdraw",
            "nameLocation": "331:8:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "339:2:10"
            },
            "returnParameters": {
              "id": 2729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "361:0:10"
            },
            "scope": 2745,
            "src": "322:101:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2746,
        "src": "111:316:10",
        "usedErrors": []
      }
    ],
    "src": "32:395:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {
    "97": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x3d69CDBFC3Cf0be0E9E8A10EAD08cE2624854468",
      "transactionHash": "0xc803be8dd57b306f8026a29cfcaaabd9af81efa9557bc73866d56dd74669dafb"
    },
    "1651668597457": {
      "events": {},
      "links": {},
      "address": "0x2100CDDFC6982cd05294913b0A0778C10150769c",
      "transactionHash": "0xadf55d0940c565dd4e4ef2987d03d610885488066dc177c66c551e95c678f205"
    },
    "1651728260338": {
      "events": {},
      "links": {},
      "address": "0x2100CDDFC6982cd05294913b0A0778C10150769c",
      "transactionHash": "0xadf55d0940c565dd4e4ef2987d03d610885488066dc177c66c551e95c678f205"
    },
    "1653026455217": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x1047F2B0e7ae15FA965Ea7bAe7c30eFD2f3AA7F1",
      "transactionHash": "0x9f5a803d23d4aa23b944338bebb47fa53bde87dfa66b0ba3a9fd498eb2612fda"
    },
    "1653047527373": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x504ab9c55b67C161eCE4Ad4206566D01Bd9390ED",
      "transactionHash": "0x9c6ccda56714143aa2fa422a7437dcd8cf4ef36498dc03a678c591e364061b39"
    },
    "1653115005730": {
      "events": {},
      "links": {},
      "address": "0x96Af4496368F564DD9b40D118287c30Cc16c8341",
      "transactionHash": "0x36c4da63bf70fb137bebc7bb26f97e66685526a5dc9b86c32f2d1b7eff71f13a"
    },
    "1653235981822": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x95f5001bfb90b343d07C977f6f93387e620C6fD6",
      "transactionHash": "0xa9c6ac262fef19ce47f6594687918517426637f8a218f02652db13cf6f2dda23"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-05-28T11:36:42.086Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}